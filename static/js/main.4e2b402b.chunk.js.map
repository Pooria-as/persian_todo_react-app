{"version":3,"sources":["Components/NewTodo.jsx","Components/Todo.jsx","Components/TodoList.jsx","App.js","index.js"],"names":["NewTodo","props","handleTask","e","setState","target","name","value","submitForm","preventDefault","state","task","Swal","fire","icon","title","text","create","id","uuid","onSubmit","this","className","onChange","onClick","validation","React","Component","Todo","Delete","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","delete","items","TodoList","createTodo","newTodo","todos","idx","filter","item","map","App","ReactDOM","render","document","getElementById"],"mappings":"2NAyEeA,E,kDApEX,WAAYC,GACX,IAAD,8BACI,cAAMA,IASVC,WAAa,SAACC,GAEV,EAAKC,SAAL,eAAgBD,EAAEE,OAAOC,KAAMH,EAAEE,OAAOE,SAZ5C,EAeAC,WAAa,SAACL,GAEVA,EAAEM,iBACmB,KAAlB,EAAKC,MAAMC,KAEVC,IAAKC,KAAK,CACNC,KAAM,QACNC,MAAO,qBACPC,KAAM,2EAMV,EAAKf,MAAMgB,OAAX,2BAAsB,EAAKP,OAA3B,IAAiCQ,GAAGC,iBACpCP,IAAKC,KAAK,CACNC,KAAM,UACNC,MAAO,2BACPC,KAAM,yIA/Bd,EAAKN,MAAM,CACPC,KAAK,IAHb,E,0CAyCA,WACI,OAAO,8BAEP,sBAAMS,SAAUC,KAAKb,WAArB,SACG,sBAAKc,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACA,uBACHhB,KAAK,OACLiB,SAAUF,KAAKnB,WACfK,MAAOc,KAAKX,MAAMC,KAClBW,UAAU,mBAGN,qBAAKA,UAAU,WAAf,SACA,wBAAQE,QAASH,KAAKI,WAAYH,UAAU,4BAA5C,+D,GAzDMI,IAAMC,WCDtBC,E,4MAGFC,OAAQ,WAEJjB,IAAKC,KAAK,CACNE,MAAO,gIACPD,KAAM,UACNgB,kBAAkB,EAClBC,mBAAoB,MACpBC,kBAAmB,QACnBC,kBAAmB,uBACnBC,iBAAkB,wBAEjBC,MAAK,SAACC,GACHA,EAAOC,cACf,EAAKpC,MAAMqC,OAAO,EAAKrC,MAAMiB,IAEvBN,IAAKC,KACH,mCACA,oFACA,gB,4CAOZ,WACI,OAAO,sBAAKS,UAAU,MAAf,UACH,qBAAKA,UAAU,WAAf,SACA,oBAAIA,UAAU,aAAd,SACc,oBAAIA,UAAU,kBAAd,SACKD,KAAKpB,MAAMsC,YAK9B,qBAAKjB,UAAU,WAAf,SAEA,wBAAQA,UAAU,2BACJE,QAASH,KAAKQ,OAD5B,yC,GAxCOH,IAAMC,WAgDVC,ICKAY,E,kDAnDX,WAAYvC,GACX,IAAD,8BACI,cAAMA,IAOVwC,WAAa,SAACC,GAEV,OAAO,EAAKtC,SAAS,CACjBuC,MAAM,GAAD,mBAAK,EAAKjC,MAAMiC,OAAhB,CAAsBD,OAXnC,EAeAJ,OAAS,SAACM,GAEN,EAAKxC,SAAS,CACVuC,MAAM,EAAKjC,MAAMiC,MAAME,QAAO,SAAAC,GAAI,OAAEA,EAAK5B,KAAK0B,QAhBlD,EAAKlC,MAAM,CACPiC,MAAM,IAHd,E,0CAsBA,WAAU,IAAD,OACL,OAAQ,sBAAKrB,UAAU,OAAf,UAER,qBAAKA,UAAU,cAAf,SACA,oBAAIA,UAAU,mBAAd,uGAKG,sBAAKA,UAAU,YAAf,UAEC,cAAC,EAAD,CAAUL,OAAQI,KAAKoB,aACvB,uBAGIpB,KAAKX,MAAMiC,MAAMI,KAAI,SAACD,GAClB,OAAQ,cAAC,EAAD,CAAoB5B,GAAI4B,EAAK5B,GAAIoB,OAAQ,EAAKA,OAAQC,MAAOO,EAAKnC,MAAvDmC,EAAK5B,iB,GAxCrBQ,IAAMC,WCDvBqB,E,4JACF,WACI,OAAO,sBAAK1B,UAAU,YAAf,UACH,cAAC,EAAD,IACA,mBAAGA,UAAU,mBAAb,uD,GAJMI,IAAMC,WAWTqB,ICXfC,IAASC,OAAO,cAAC,EAAD,IAAOC,SAASC,eAAe,W","file":"static/js/main.4e2b402b.chunk.js","sourcesContent":["import React from 'react';\r\nimport {v1 as uuid} from \"uuid\"; \r\nimport Swal from \"sweetalert2\"; \r\n\r\nclass NewTodo extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            task:'',\r\n            \r\n        }\r\n    }   \r\n\r\n  \r\n   \r\n    handleTask = (e) =>\r\n    {\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    submitForm = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        if(this.state.task==='')\r\n        {\r\n            Swal.fire({  \r\n                icon: 'error',  \r\n                title: 'خطا',  \r\n                text: 'فیلد  خالی است',  \r\n              });  \r\n\r\n        }\r\n        else\r\n        {\r\n            this.props.create({...this.state,id:uuid()})\r\n            Swal.fire({  \r\n                icon: 'success',  \r\n                title: 'موفق',  \r\n                text: 'برنامه با موفقیت اضافه شد',  \r\n              });  \r\n\r\n\r\n        }\r\n    \r\n    } \r\n\r\n    render() { \r\n        return <div>\r\n\r\n        <form onSubmit={this.submitForm}>\r\n           <div className='row'>\r\n               <div className='col-md-9'>\r\n               <input \r\n            name='task'\r\n            onChange={this.handleTask}\r\n            value={this.state.task}\r\n            className=\"form-control\"\r\n            />\r\n                </div>\r\n                <div className='col-md-3'>\r\n                <button onClick={this.validation} className='btn btn-block btn-success'>\r\n                افزودن\r\n            </button>\r\n                </div>\r\n           </div>\r\n\r\n           \r\n        </form>\r\n        </div>;\r\n    }\r\n}\r\n \r\nexport default NewTodo;","import React from 'react';\r\nimport Swal from \"sweetalert2\"; \r\n\r\nclass Todo extends React.Component {\r\n    \r\n\r\n    Delete =() =>\r\n    {\r\n        Swal.fire({\r\n            title: 'آیا مطمنی میخوای پاک کنی?',\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: 'red',\r\n            cancelButtonColor: 'green',\r\n            confirmButtonText: 'آره !',\r\n            cancelButtonText: 'خیر!',\r\n\r\n          }).then((result) => {\r\n            if (result.isConfirmed) {\r\n        this.props.delete(this.props.id)\r\n              \r\n              Swal.fire(\r\n                'حذف شد!',\r\n                'با موفقیت حذف شد',\r\n                'success'\r\n              )\r\n            }\r\n          })\r\n    }\r\n\r\n\r\n    render() { \r\n        return <div className='row'>\r\n            <div className='col-md-9'>\r\n            <ul className=\"list-group\">\r\n                          <li className=\"list-group-item\">\r\n                              {this.props.items}\r\n                          \r\n                          </li>\r\n            </ul>\r\n            </div>\r\n            <div className='col-md-3'>\r\n            \r\n            <button className='btn btn-danger btn-block'\r\n                          onClick={this.Delete}\r\n                          >حذف</button>\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n \r\nexport default Todo;","import React from 'react';\r\nimport NewTodo from './NewTodo';\r\nimport Todo from './Todo';\r\n\r\nclass TodoList extends React.Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            todos:[]\r\n        }\r\n    }\r\n\r\n\r\n    createTodo = (newTodo) =>\r\n    {\r\n        return this.setState({\r\n            todos:[...this.state.todos,newTodo]\r\n        })\r\n    }\r\n\r\n    delete = (idx) =>\r\n    {\r\n        this.setState({\r\n            todos:this.state.todos.filter(item=>item.id!==idx)\r\n        })\r\n    }\r\n\r\n    render() { \r\n        return (<div className='card'>\r\n\r\n        <div className='card-header'>\r\n        <h2 className='text text-center'>\r\n            لیست انجام کار ها\r\n        </h2>\r\n\r\n        </div>\r\n           <div className='card-body'>\r\n          \r\n            <NewTodo  create={this.createTodo}/>\r\n            <br/>\r\n\r\n            {\r\n                this.state.todos.map((item)=>{\r\n                    return  <Todo key={item.id} id={item.id} delete={this.delete} items={item.task}/>\r\n                })\r\n            }\r\n           </div>\r\n\r\n\r\n        </div>\r\n        \r\n            );\r\n    }\r\n}\r\n \r\nexport default TodoList;\r\n\r\n\r\n","import React from 'react';\r\nimport TodoList from './Components/TodoList';\r\n\r\nclass App extends React.Component {\r\n    render() { \r\n        return <div className='container'>\r\n            <TodoList/>\r\n            <p className='text text-center'>\r\n                App by : Pooria Asiabi👌\r\n            </p>\r\n        </div>;\r\n    }\r\n}\r\n \r\nexport default App;","import React from 'react';\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nReactDOM.render(<App/>,document.getElementById('root'))"],"sourceRoot":""}